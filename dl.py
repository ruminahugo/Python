import os
import subprocess
import shutil
import yt_dlp

def download_video_audio(url, output_folder="downloads"):
    # T·∫°o th∆∞ m·ª•c l∆∞u file n·∫øu ch∆∞a t·ªìn t·∫°i
    os.makedirs(output_folder, exist_ok=True)

    # T√πy ch·ªçn t·∫£i video
    video_opts = {
        "format": "bv*[ext=mp4]",
        "outtmpl": os.path.join(output_folder, "%(title)s.%(ext)s"),
        "throttled-rate": None,
        "external-downloader": "aria2c",
        "external-downloader-args": "-x 16 -s 16 -k 2M --auto-file-renaming=false --max-connection-per-server=16 --retry-wait=2 --min-split-size=10M",
        "restrictfilenames": True
    }

    # T√πy ch·ªçn t·∫£i audio
    audio_opts = {
        "format": "ba[ext=m4a]",
        "outtmpl": os.path.join(output_folder, "%(title)s.%(ext)s"),
        "postprocessors": [{
            "key": "FFmpegExtractAudio",
            "preferredcodec": "m4a",
            "preferredquality": "256"
        }],
        "restrictfilenames": True
    }

    # Ki·ªÉm tra n·∫øu aria2c kh√¥ng c√≥ th√¨ x√≥a t√πy ch·ªçn t·∫£i nhanh
    if not shutil.which("aria2c"):
        print("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y `aria2c`, s·∫Ω t·∫£i ch·∫≠m h∆°n.")
        del video_opts["external-downloader"]
        del video_opts["external-downloader-args"]

    # L·∫•y t√™n file t·ª´ yt-dlp
    with yt_dlp.YoutubeDL(video_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        video_file = ydl.prepare_filename(info)
        video_file = video_file.replace(".webm", ".mp4")
    audio_file = video_file.replace(".mp4", ".m4a")
    final_output = video_file.replace(".mp4", "_final.mp4")

    # T·∫£i video
    print("üé• ƒêang t·∫£i video...")
    with yt_dlp.YoutubeDL(video_opts) as ydl:
        ydl.download([url])

    # T·∫£i audio
    print("üéµ ƒêang t·∫£i √¢m thanh...")
    with yt_dlp.YoutubeDL(audio_opts) as ydl:
        ydl.download([url])

    # Ki·ªÉm tra file ƒë√£ t·∫£i xong ch∆∞a
    if not os.path.exists(video_file) or not os.path.exists(audio_file):
        print(f"‚ùå L·ªói: Kh√¥ng t√¨m th·∫•y file '{video_file}' ho·∫∑c '{audio_file}'")
        return

    # Gh√©p video v√† audio b·∫±ng FFmpeg
    print("üé¨ ƒêang gh√©p video v√† √¢m thanh...")
    ffmpeg_cmd = [
        "ffmpeg", "-y", "-i", video_file, "-i", audio_file,
        "-c:v", "copy", "-c:a", "aac", "-strict", "experimental", final_output
    ]
    try:
        subprocess.run(ffmpeg_cmd, check=True)
        print(f"‚úÖ Ho√†n t·∫•t! Video ƒë√£ l∆∞u t·∫°i: {final_output}")
    except subprocess.CalledProcessError:
        print("‚ùå L·ªói: Kh√¥ng th·ªÉ gh√©p video, ki·ªÉm tra l·∫°i FFmpeg!")

    # X√≥a file video v√† audio g·ªëc
    os.remove(video_file)
    os.remove(audio_file)

if __name__ == "__main__":
    url = input("üé• Nh·∫≠p URL video YouTube: ")
    download_video_audio(url, output_folder="videos")
